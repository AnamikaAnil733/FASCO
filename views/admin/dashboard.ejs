<%- include("../../views/partials/admin/header") %>

<style>
    :root {
        --primary-color: #0C977F;
        --primary-light: #e6f4f1;
        --secondary-color: #2c3e50;
        --success-color: #2ecc71;
        --warning-color: #f1c40f;
        --info-color: #3498db;
        --danger-color: #e74c3c;
        --background-color: #f8f9fa;
        --card-shadow: 0 2px 20px rgba(0,0,0,0.08);
        --hover-shadow: 0 10px 30px rgba(0,0,0,0.15);
    }

    .container-fluid {
        background-color: var(--background-color);
        min-height: calc(100vh - 60px);
    }

    .dashboard-card {
        height: 100%;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        border: none;
    }

    .chart-container {
        position: relative;
        height: 400px;  
        width: 100%;
        margin: 0 auto;
    }

    #salesChart {
        height: 300px !important;  
    }

    .card-body {
        padding: 1.5rem;
    }

    .stat-icon {
        width: 56px;
        height: 56px;
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 1rem;
        font-size: 1.5rem;
    }

    .bg-primary-light { background-color: #e6f4f1; }
    .bg-success-light { background-color: #e8f8f0; }
    .bg-warning-light { background-color: #fef7e6; }
    .bg-info-light { background-color: #e7f3fb; }

    .text-primary { color: var(--primary-color) !important; }
    .text-success { color: var(--success-color) !important; }
    .text-warning { color: var(--warning-color) !important; }
    .text-info { color: var(--info-color) !important; }

    .card-title {
        color: #64748b;
        font-size: 0.875rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    h3 {
        color: var(--secondary-color);
        font-weight: 600;
        font-size: 1.75rem;
    }

    .content-header {
        background: transparent;
        padding: 1.5rem 0;
        margin-bottom: 2rem;
        border-radius: 0;
        box-shadow: none;
    }

    .content-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--secondary-color);
        margin: 0;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border: none;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        border-radius: 12px;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background-color: #0a7d6a;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(12, 151, 127, 0.2);
    }

    .filter-container {
        background: white;
        padding: 1rem;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        margin-bottom: 1.5rem;
    }

    .form-select {
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        transition: all 0.2s ease;
    }

    .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(12, 151, 127, 0.1);
    }

    .list-group-item {
        border: none;
        padding: 1rem;
        margin-bottom: 0.5rem;
        border-radius: 8px;
        background: #f8fafc;
        transition: all 0.2s ease;
    }

    .list-group-item:hover {
        background: #f1f5f9;
        transform: translateX(5px);
    }

    #salesChart, #topProductsChart, #topCategoriesChart, #topBrandsChart {
        border-radius: 12px;
    }

    @media (max-width: 768px) {
        .container-fluid {
            padding: 1rem;
        }
        
        .dashboard-card {
            margin-bottom: 1rem;
        }
        
        .content-header {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }
    }
</style>

<div class="container-fluid p-4">
    <div class="content-header">
        <h2 class="content-title">Dashboard</h2>
        <div>
            <a href="/admin/sales-report" class="btn btn-primary">View Sales Report</a>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-primary-light">
                        <i class="fas fa-money-bill text-primary"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Revenue</h6>
                    <h3 class="mb-0">₹<%= summary.totalAmount.toFixed(2) %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-success-light">
                        <i class="fas fa-shopping-cart text-success"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Orders</h6>
                    <h3 class="mb-0"><%= summary.totalOrders %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-info-light">
                        <i class="fas fa-box text-info"></i>
                    </div>
                    <h6 class="card-title mb-2">Products Sold</h6>
                    <h3 class="mb-0"><%= summary.totalProductsSold %></h3>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 mb-4">
            <div class="card dashboard-card h-100">
                <div class="card-body">
                    <div class="stat-icon bg-warning-light">
                        <i class="fas fa-tags text-warning"></i>
                    </div>
                    <h6 class="card-title mb-2">Total Discounts</h6>
                    <h3 class="mb-0">₹<%= summary.totalDiscount.toFixed(2) %></h3>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <!-- Sales Chart -->
        <div class="col-12 mb-4">
            <div class="card dashboard-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="card-title">Sales Overview</h5>
                        <select class="form-select" style="width: auto;" id="salesChartFilter">
                            <option value="yearly">Yearly</option>
                            <option value="monthly" selected>Monthly</option>
                            <option value="weekly">Weekly</option>
                            <option value="daily">Daily</option>
                            <option value="custom">Custom</option>
                        </select>

                        <!-- Hidden Date Inputs for Custom Selection -->
                        <div id="customDateRange" style="display: none;">
                            <label for="startDate">Start Date:</label>
                            <input type="date" id="startDate">

                            <label for="endDate">End Date:</label>
                            <input type="date" id="endDate">
                        </div>
                    </div>

                    <div class="chart-container">
                        <canvas id="salesChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <!-- Best Selling Products -->
        <div class="col-md-6 mb-4">
            <div class="card dashboard-card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Top 10 Products</h5>
                    <div class="chart-container">
                        <canvas id="productsChart"></canvas>
                    </div>
            
        <div class="table-responsive mt-4">
            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Product</th>
                        <th class="text-center">Sales</th>
                        <th class="text-end">Revenue</th>
                    </tr>
                </thead>
                <tbody>
                    <% topProducts.forEach((product, index) => { %>
                    <tr>
                        <td><%= index + 1 %></td>
                        <td><%= product.name %></td>
                        <td class="text-center"><%= product.sales %></td>
                        <td class="text-end">₹<%= product.revenue.toFixed(2) %></td>
                    </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</div>
</div>

        <!-- Best Selling Categories -->
        <div class="col-md-6 mb-4">
            <div class="card dashboard-card">
                <div class="card-body">
                    <h5 class="card-title mb-4">Top Categories</h5>
                    <div class="chart-container">
                        <canvas id="categoriesChart"></canvas>
                    </div>
                    <div class="table-responsive mt-4">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Category</th>
                                    <th class="text-center">Sales</th>
                                    <th class="text-end">Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% topCategories.forEach((category, index) => { %>
                                <tr>
                                    <td><%= index + 1 %></td>
                                    <td><%= category.name %></td>
                                    <td class="text-center"><%= category.sales %></td>
                                    <td class="text-end">₹<%= category.revenue.toFixed(2) %></td>
                                </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    let salesChart;

    // Initialize charts when document is ready
    document.addEventListener('DOMContentLoaded', function() {
        // Sales Chart
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        const gradientFill = salesCtx.createLinearGradient(0, 0, 0, 400);
        gradientFill.addColorStop(0, 'rgba(12, 151, 127, 0.2)');
        gradientFill.addColorStop(1, 'rgba(12, 151, 127, 0)');

        salesChart = new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: <%- JSON.stringify(salesData.labels) %>,
                datasets: [{
                    label: 'Revenue',
                    data: <%- JSON.stringify(salesData.values) %>,
                    borderColor: '#0C977F',
                    backgroundColor: gradientFill,
                    borderWidth: 3,
                    tension: 0.4,
                    fill: true,
                    yAxisID: 'y'
                },
                {
                    label: 'Products Sold',
                    data: <%- JSON.stringify(salesData.productCounts) %>,
                    borderColor: '#3498db',
                    backgroundColor: 'rgba(52, 152, 219, 0.1)',
                    borderWidth: 3,
                    tension: 0.4,
                    fill: true,
                    yAxisID: 'y1'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    intersect: false,
                    mode: 'index'
                },
                plugins: {
                    legend: {
                        position: 'top'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                if (context.dataset.label === 'Revenue') {
                                    return 'Revenue: ₹' + context.raw.toLocaleString('en-IN');
                                } else {
                                    return 'Products: ' + context.raw;
                                }
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        type: 'linear',
                        display: true,
                        position: 'left',
                        title: {
                            display: true,
                            text: 'Revenue (₹)'
                        },
                        ticks: {
                            callback: function(value) {
                                return '₹' + value.toLocaleString('en-IN');
                            }
                        }
                    },
                    y1: {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        title: {
                            display: true,
                            text: 'Products Sold'
                        },
                        grid: {
                            drawOnChartArea: false
                        }
                    }
                }
            }
        });

        // Products Chart
        const productsChart = new Chart(document.getElementById('productsChart').getContext('2d'), {
            type: 'doughnut',
            data: {
                labels: <%- JSON.stringify(topProducts.map(p => p.name)) %>,
                datasets: [{
                    data: <%- JSON.stringify(topProducts.map(p => p.sales)) %>,
                    backgroundColor: [
                        '#0C977F', '#2ecc71', '#3498db', '#f1c40f', '#e74c3c',
                        '#9b59b6', '#1abc9c', '#34495e', '#16a085', '#27ae60'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right',
                        labels: {
                            padding: 20,
                            font: {
                                size: 12
                            }
                        }
                    }
                }
            }
        });

        // Categories Chart
        const categoriesChart = new Chart(document.getElementById('categoriesChart').getContext('2d'), {
            type: 'pie',
            data: {
                labels: <%- JSON.stringify(topCategories.map(c => c.name)) %>,
                datasets: [{
                    data: <%- JSON.stringify(topCategories.map(c => c.sales)) %>,
                    backgroundColor: [
                        '#0C977F', '#2ecc71', '#3498db', '#f1c40f', '#e74c3c'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right',
                        labels: {
                            padding: 20,
                            font: {
                                size: 12
                            }
                        }
                    }
                }
            }
        });

        // Handle filter changes
        document.getElementById('salesChartFilter').addEventListener('change', handleFilterChange);
        
        // Handle date input changes
        document.getElementById('startDate').addEventListener('change', handleDateChange);
        document.getElementById('endDate').addEventListener('change', handleDateChange);
    });

    async function handleFilterChange(e) {
        const period = e.target.value;
        const customDateRange = document.getElementById('customDateRange');

        if (period === 'custom') {
            customDateRange.style.display = 'block';
            return; // Don't fetch data yet, wait for date selection
        } else {
            customDateRange.style.display = 'none';
            await fetchSalesData(); // Fetch immediately for non-custom periods
        }
    }

    async function handleDateChange() {
        const period = document.getElementById('salesChartFilter').value;
        if (period === 'custom') {
            await fetchSalesData();
        }
    }

    async function fetchSalesData() {
        const period = document.getElementById('salesChartFilter').value;
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        if (period === 'custom' && (!startDate || !endDate)) {
            console.warn('Please select both start and end dates.');
            return;
        }

        try {
            let url = `/admin/sales-data?period=${period}`;
            if (period === 'custom') {
                // Format dates as YYYY-MM-DD
                const formattedStartDate = startDate.split('T')[0];
                const formattedEndDate = endDate.split('T')[0];
                url += `&startDate=${formattedStartDate}&endDate=${formattedEndDate}`;
            }

            console.log('Fetching data from:', url); // Debug log

            const response = await fetch(url);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const data = await response.json();
            
            console.log('Received data:', data); // Debug log
            
            salesChart.data.labels = data.labels;
            salesChart.data.datasets[0].data = data.values;
            salesChart.data.datasets[1].data = data.productCounts;
            salesChart.update();
        } catch (error) {
            console.error('Error fetching sales data:', error);
            if (!(period === 'custom' && (!startDate || !endDate))) {
                alert('Error updating sales chart. Please try again.');
            }
        }
    }
</script>

<%- include("../../views/partials/admin/footer") %>
