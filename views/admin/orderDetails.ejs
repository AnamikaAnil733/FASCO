<%- include('../partials/admin/header.ejs') %>

<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Order Details</h2>
            <p>Order ID: <%= order._id %></p>
        </div>
        <div>
            <a href="/admin/orders" class="btn btn-light">Back to Orders</a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Order Information</h4>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Order Date</label>
                        <div class="form-control-plaintext"><%= moment(order.orderDate).format('MMM DD, YYYY') %></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select status-select" 
                                data-order-id="<%= order._id %>"
                                <%= order.status === 'Pending'||order.status === 'Delivered' || order.status === 'Cancelled' ? 'disabled' : '' %>>
                            <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                            <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                            <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                            <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                            <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Total Amount</label>
                        <div class="form-control-plaintext">₹<%= (order.totalAmount || 0).toFixed(2) %></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Payment Method </label>
                        <div class="form-control-plaintext"><%= order.paymentMethod %></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Customer Information</h4>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Customer Name</label>
                        <div class="form-control-plaintext"><%= order.userId ? order.userId.name : 'N/A' %></div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <div class="form-control-plaintext"><%= order.userId ? order.userId.email : 'N/A' %></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Ordered Items</h4>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                            <th>Return Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.items.forEach(item => { %>
                            <tr>
                                <td><%= item.productId ? item.productId.productName : 'N/A' %></td>
                                <td><%= item.quantity %></td>
                                <td>₹<%= (item.price || 0).toFixed(2) %></td>
                                <td>₹<%= ((item.quantity || 0) * (item.price || 0)).toFixed(2) %></td>
                                <td>
                                    <% if (item.isReturned) { %>
                                        <span class="badge bg-warning">Return Requested</span>
                                        <div class="return-details mt-2">
                                            <div class="alert alert-light border p-2 mb-0">
                                                <small class="d-block text-muted mb-1">Return Reason:</small>
                                                <span class="text-dark"><%= item.returnReason || 'No reason provided' %></span>
                                            </div>
                                        </div>
                                    <% } else if (item.returnStatus === 'Approved') { %>
                                        <span class="badge bg-success">Return Approved</span>
                                    <% } else if (item.returnStatus === 'Rejected') { %>
                                        <span class="badge bg-danger">Return Rejected</span>
                                    <% } else { %>
                                        <span class="badge bg-secondary">No Return</span>
                                    <% } %>
                                </td>
                                <td>
                                    <% if (item.isReturned && !item.returnStatus) { %>
                                        <button class="btn btn-sm btn-success approve-return" 
                                                data-order-id="<%= order._id %>" 
                                                data-product-id="<%= item.productId._id %>"
                                                onclick="handleReturn('<%= order._id %>', '<%= item.productId._id %>', 'approve')">
                                            Approve Return
                                        </button>
                                        <button class="btn btn-sm btn-danger reject-return"
                                                data-order-id="<%= order._id %>" 
                                                data-product-id="<%= item.productId._id %>"
                                                onclick="handleReturn('<%= order._id %>', '<%= item.productId._id %>', 'reject')">
                                            Reject Return
                                        </button>
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="5" class="text-end"><strong>Subtotal:</strong></td>
                            <td><strong>₹<%= (order.totalAmount || 0).toFixed(2) %></strong></td>
                        </tr>
                        <% if (order.coupon) { %>
                            <tr>
                                <td colspan="5" class="text-end text-success">
                                    <strong>Coupon Discount (<%= order.coupon.code %>):</strong>
                                </td>
                                <td class="text-success">
                                    <strong>-₹<%= (order.coupon.discountedAmount || 0).toFixed(2) %></strong>
                                </td>
                            </tr>
                        <% } %>
                        <tr>
                            <td colspan="5" class="text-end">
                                <strong class="fs-5">Final Amount:</strong>
                            </td>
                            <td>
                                <strong class="fs-5 text-primary">
                                    ₹<%= ((order.totalAmount || 0) - (order.coupon ? order.coupon.discountedAmount : 0)).toFixed(2) %>
                                </strong>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <h4>Shipping Address</h4>
        </div>
        <div class="card-body">
            <% if (order.shippingAddress) { %>
                <div class="mb-3">
                    <label class="form-label">Name</label>
                    <div class="form-control-plaintext"><%= order.shippingAddress.name || 'N/A' %></div>
                </div>
                <div class="mb-3">
                    <label class="form-label">City</label>
                    <div class="form-control-plaintext"><%= order.shippingAddress.city || 'N/A' %></div>
                </div>
                <% if (order.shippingAddress.landMark) { %>
                    <div class="mb-3">
                        <label class="form-label">Landmark</label>
                        <div class="form-control-plaintext"><%= order.shippingAddress.landMark %></div>
                    </div>
                <% } %>
            <% } else { %>
                <div class="alert alert-info">No shipping address available</div>
            <% } %>
        </div>
    </div>
</section>

<style>
    .return-details {
        font-size: 0.9rem;
    }
    
    .return-details .alert {
        border-radius: 6px;
    }
    
    .return-details small {
        font-size: 0.8rem;
        font-weight: 500;
    }
    
    .badge {
        padding: 0.5rem 1rem;
        font-weight: 500;
    }
    
    .btn-sm {
        padding: 0.4rem 0.8rem;
        font-size: 0.875rem;
    }
</style>

<script>
// Handle return actions
async function handleReturn(orderId, productId, action) {
    try {
        // Show confirmation dialog
        const result = await Swal.fire({
            title: `${action === 'approve' ? 'Approve' : 'Reject'} Return Request`,
            html: `
                <div class="text-start">
                    <p>Are you sure you want to ${action} this return request?</p>
                    ${action === 'approve' ? 
                        '<div class="alert alert-info">Note: Approving will refund the amount to customer\'s wallet.</div>' 
                        : 
                        '<div class="alert alert-warning">Note: Rejecting will cancel the return request.</div>'
                    }
                </div>
            `,
            icon: action === 'approve' ? 'question' : 'warning',
            showCancelButton: true,
            confirmButtonText: action === 'approve' ? 'Yes, Approve' : 'Yes, Reject',
            cancelButtonText: 'Cancel',
            confirmButtonColor: action === 'approve' ? '#28a745' : '#dc3545',
            cancelButtonColor: '#6c757d',
            reverseButtons: true
        });

        if (result.isConfirmed) {
            const response = await fetch(`/admin/orders/${orderId}/return/${productId}/${action}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: `Return request ${action === 'approve' ? 'approved' : 'rejected'} successfully`,
                    confirmButtonColor: '#4CAF50'
                });
                window.location.reload();
            } else {
                const data = await response.json();
                await Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: data.message || `Failed to ${action} return`,
                    confirmButtonColor: '#4CAF50'
                });
            }
        }
    } catch (error) {
        console.error(`Error ${action}ing return:`, error);
        await Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: `Failed to ${action} return request`,
            confirmButtonColor: '#4CAF50'
        });
    }
}

document.addEventListener('DOMContentLoaded', function() {
    // Handle status changes
    document.querySelector('.status-select').addEventListener('change', async function() {
        const orderId = this.dataset.orderId;
        const newStatus = this.value;

        try {
            const response = await fetch('/admin/orders/update-status', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId: orderId,
                    status: newStatus
                })
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

                // If status is Delivered or Cancelled, disable the select
                if (newStatus === 'Delivered' || newStatus === 'Cancelled') {
                    this.disabled = true;
                }
            } else {
                throw new Error(data.message);
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to update order status',
                icon: 'error',
                confirmButtonText: 'OK'
            });
            // Reset select to previous value
            this.value = this.getAttribute('data-previous-value');
        }
    });

    // Store the previous value when focusing on select
    document.querySelector('.status-select').addEventListener('focus', function() {
        this.setAttribute('data-previous-value', this.value);
    });

    // Initialize tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl, {
            html: true
        })
    })
});
</script>

<%- include('../partials/admin/footer.ejs') %>
