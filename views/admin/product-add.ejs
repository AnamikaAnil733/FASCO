<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
   <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
   <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<style>
   :root {
       --primary-color: #B5D8CC;
       --secondary-color: #E8B4BC;
       --accent-color: #FFD9C0;
       --background-light: #F8F6F4;
       --text-primary: #6B7B8C;
       --danger-color: #FFB4B4;
   }

   .content-main {
       padding: 2rem;
       background: var(--background-light);
   }

   .content-header {
       margin-bottom: 2rem;
   }

   .content-title {
       color: var(--text-primary);
       font-size: 1.8rem;
       font-weight: 600;
       margin-bottom: 0.5rem;
   }

   .card {
       background: white;
       border-radius: 15px;
       border: 1px solid rgba(0,0,0,0.05);
       box-shadow: 0 5px 15px rgba(0,0,0,0.05);
       transition: transform 0.3s ease, box-shadow 0.3s ease;
   }

   .card:hover {
       transform: translateY(-5px);
       box-shadow: 0 8px 25px rgba(0,0,0,0.1);
   }

   .card-header {
       background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
       color: white;
       border-radius: 15px 15px 0 0;
       padding: 1.5rem;
       margin-top: 15px;
       margin-bottom: 50px;
       border-bottom: 1px solid rgba(0, 0, 0, 0.125);
       background-color: #fff;
   }

   .card-header h4 {
       margin: 0;
       font-size: 1.5rem;
       color: #333;
   }

   .card-body {
       padding: 2rem;
   }

   .form-label {
       color: var(--text-primary);
       font-weight: 500;
       margin-bottom: 0.5rem;
   }

   .form-control {
       border-radius: 10px;
       border: 1px solid rgba(0,0,0,0.1);
       padding: 0.8rem;
       transition: all 0.3s ease;
   }

   .form-control:focus {
       box-shadow: 0 0 0 3px rgba(181, 216, 204, 0.3);
       border-color: var(--primary-color);
   }

   .form-select {
       border-radius: 10px;
       border: 1px solid rgba(0,0,0,0.1);
       padding: 0.8rem;
       background-color: white;
       transition: all 0.3s ease;
   }

   .form-select:focus {
       box-shadow: 0 0 0 3px rgba(181, 216, 204, 0.3);
       border-color: var(--primary-color);
   }

   .preview-box {
       width: 150px;
       height: 150px;
       border: 2px dashed var(--primary-color);
       border-radius: 12px;
       overflow: hidden;
       position: relative;
       cursor: pointer;
       transition: all 0.3s ease;
       background: white;
       display: flex;
       flex-direction: column;
       align-items: center;
       justify-content: center;
       padding: 15px;
   }

   .preview-box img {
       width: 100%;
       height: 100%;
       object-fit: cover;
       display: none;
   }

   .preview-box.has-image img {
       display: block;
   }

   .preview-box.has-image .upload-text {
       display: none;
   }

   .upload-text {
       text-align: center;
       color: var(--text-primary);
       transition: opacity 0.3s ease;
   }

   .upload-icon {
       font-size: 24px;
       color: var(--primary-color);
       margin-bottom: 10px;
   }

   .upload-message {
       font-size: 14px;
       margin: 0;
       color: var(--text-primary);
   }

   .upload-hint {
       font-size: 12px;
       margin-top: 5px;
       color: var(--text-primary);
       opacity: 0.8;
   }

   .remove-image {
       position: absolute;
       top: 8px;
       right: 8px;
       background: var(--danger-color);
       color: white;
       border: none;
       border-radius: 50%;
       width: 28px;
       height: 28px;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       z-index: 1;
   }

   .remove-image:hover {
       transform: scale(1.1);
       background: #ff8080;
   }

   .cropper-modal {
       display: none;
       position: fixed;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0.85);
       z-index: 1050;
       overflow: auto;
   }

   .cropper-content {
       position: relative;
       width: 90%;
       max-width: 1000px;
       margin: 2% auto;
       background: #fff;
       padding: 20px;
       border-radius: 8px;
       box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
   }

   .cropper-container {
       height: 70vh;
       max-height: 600px;
       background: #f8f9fa;
       margin-bottom: 20px;
       border-radius: 4px;
       overflow: hidden;
   }

   #cropperImage {
       max-width: 100%;
       max-height: 100%;
       display: block;
   }

   .cropper-actions {
       display: flex;
       gap: 10px;
       justify-content: center;
       flex-wrap: wrap;
       padding: 15px 0;
   }

   .cropper-actions button {
       padding: 10px 20px;
       font-size: 1rem;
       display: flex;
       align-items: center;
       gap: 8px;
       border-radius: 4px;
       transition: all 0.3s ease;
   }

   .cropper-actions button:hover {
       transform: translateY(-2px);
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
   }

   .cropper-actions button i {
       font-size: 1.2rem;
   }

   .cropper-view-box,
   .cropper-face {
       border-radius: 8px;
   }

   .cropper-modal {
       background-color: rgba(0, 0, 0, 0.85);
   }

   .cropper-line,
   .cropper-point {
       background-color: #007bff;
   }

   .cropper-view-box {
       box-shadow: 0 0 0 1px #007bff;
       outline: 0;
   }

   .cropper-point {
       width: 10px;
       height: 10px;
       opacity: 1;
   }

   .cropper-point.point-n,
   .cropper-point.point-s,
   .cropper-point.point-e,
   .cropper-point.point-w {
       width: 12px;
       height: 12px;
   }

   .zoom-controls {
       position: absolute;
       right: 20px;
       top: 50%;
       transform: translateY(-50%);
       display: flex;
       flex-direction: column;
       gap: 10px;
       background: rgba(255, 255, 255, 0.9);
       padding: 10px;
       border-radius: 8px;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
   }

   .zoom-controls button {
       width: 40px;
       height: 40px;
       padding: 0;
       display: flex;
       align-items: center;
       justify-content: center;
       border-radius: 4px;
   }

   .cropper-close {
       position: absolute;
       top: 10px;
       right: 10px;
       background: none;
       border: none;
       font-size: 1.5rem;
       color: #dc3545;
       cursor: pointer;
       padding: 5px;
       transition: transform 0.3s ease;
   }

   .cropper-close:hover {
       transform: scale(1.1);
   }

   @media (max-width: 768px) {
       .cropper-content {
           width: 95%;
           margin: 10px auto;
           padding: 15px;
       }

       .cropper-container {
           height: 50vh;
       }

       .cropper-actions {
           padding: 10px 0;
       }

       .cropper-actions button {
           padding: 8px 15px;
           font-size: 0.9rem;
       }

       .zoom-controls {
           position: static;
           transform: none;
           flex-direction: row;
           justify-content: center;
           margin-top: 10px;
       }
   }

   .variant-item {
       border: 1px solid #ddd;
       border-radius: 5px;
       padding: 15px;
       background-color: #fafafa;
       margin-bottom: 15px;
   }

   .remove-variant {
       margin-top: 10px;
       background-color: #f44336;
   }

   .remove-variant:hover {
       background-color: #d32f2f;
   }

   .variant-upload-box {
       width: 200px;
       height: 200px;
   }

   .image-upload-grid {
       display: grid;
       grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
       gap: 1rem;
       margin-bottom: 1rem;
   }

   .image-upload-box {
       position: relative;
       border: 2px dashed #ccc;
       border-radius: 8px;
       overflow: hidden;
       cursor: pointer;
       transition: all 0.3s ease;
   }

   .image-upload-box:hover {
       border-color: #007bff;
   }

   .preview-container {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       display: none;
   }

   .preview-image {
       width: 100%;
       height: 100%;
       object-fit: cover;
   }

   .upload-content {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       display: flex;
       flex-direction: column;
       align-items: center;
       justify-content: center;
       padding: 1rem;
       text-align: center;
   }

   .upload-icon {
       font-size: 2.5rem;
       color: #6c757d;
       margin-bottom: 0.5rem;
   }

   .upload-text h5 {
       margin: 0;
       font-size: 1rem;
       color: #495057;
   }

   .upload-text p {
       margin: 0;
       font-size: 0.875rem;
       color: #6c757d;
   }

   .has-image .preview-container {
       display: block;
   }

   .has-image .upload-content {
       display: none;
   }

   .remove-image {
       position: absolute;
       top: 5px;
       right: 5px;
       background: rgba(255, 255, 255, 0.9);
       border: none;
       border-radius: 50%;
       width: 24px;
       height: 24px;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       z-index: 1;
   }

   .remove-image:hover {
       background: rgba(255, 255, 255, 1);
   }

   /* Add validation styles */
   .error-message {
       color: #dc3545;
       font-size: 0.875rem;
       margin-top: 0.25rem;
       display: none;
   }

   .form-control.is-invalid {
       border-color: #dc3545;
       padding-right: calc(1.5em + 0.75rem);
       background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
       background-repeat: no-repeat;
       background-position: right calc(0.375em + 0.1875rem) center;
       background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
   }

   .form-control.is-invalid:focus {
       border-color: #dc3545;
       box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
   }

   .form-control.is-valid {
       border-color: #198754;
       padding-right: calc(1.5em + 0.75rem);
       background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
       background-repeat: no-repeat;
       background-position: right calc(0.375em + 0.1875rem) center;
       background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
   }

   .form-control.is-valid:focus {
       border-color: #198754;
       box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);
   }

   /* Cropper Modal Styles */
   .cropper-modal {
       display: none;
       position: fixed;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0.85);
       z-index: 9999;
       overflow: auto;
   }

   .cropper-content {
       position: relative;
       width: 90%;
       max-width: 1000px;
       margin: 30px auto;
       background: #fff;
       padding: 20px;
       border-radius: 15px;
       box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
   }

   .cropper-header {
       display: flex;
       justify-content: space-between;
       align-items: center;
       margin-bottom: 20px;
   }

   .cropper-header h5 {
       margin: 0;
       font-size: 1.25rem;
       color: #333;
   }

   .cropper-container {
       height: 70vh;
       max-height: 600px;
       background: #f8f9fa;
       margin-bottom: 20px;
       border-radius: 8px;
       overflow: hidden;
   }

   #cropperImage {
       max-width: 100%;
       max-height: 100%;
       display: block;
   }

   .cropper-actions {
       display: flex;
       gap: 15px;
       justify-content: center;
       padding: 10px 0;
   }

   .cropper-actions button {
       padding: 10px 20px;
       font-size: 1rem;
       border-radius: 8px;
       border: none;
       cursor: pointer;
       display: flex;
       align-items: center;
       gap: 8px;
       transition: all 0.3s ease;
   }

   :root {
       --primary-color: #B5D8CC;
       --secondary-color: #E8B4BC;
       --accent-color: #FFD9C0;
       --background-light: #F8F6F4;
       --text-primary: #6B7B8C;
       --danger-color: #FFB4B4;
   }

   .content-main {
       padding: 2rem;
       background: var(--background-light);
   }

   .content-header {
       margin-bottom: 2rem;
   }

   .content-title {
       color: var(--text-primary);
       font-size: 1.8rem;
       font-weight: 600;
       margin-bottom: 0.5rem;
   }

   .card {
       background: white;
       border-radius: 15px;
       border: 1px solid rgba(0,0,0,0.05);
       box-shadow: 0 5px 15px rgba(0,0,0,0.05);
       transition: transform 0.3s ease, box-shadow 0.3s ease;
   }

   .card:hover {
       transform: translateY(-5px);
       box-shadow: 0 8px 25px rgba(0,0,0,0.1);
   }

   .card-header {
       background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
       color: white;
       border-radius: 15px 15px 0 0;
       padding: 1.5rem;
       margin-top: 15px;
       margin-bottom: 50px;
       border-bottom: 1px solid rgba(0, 0, 0, 0.125);
       background-color: #fff;
   }

   .card-header h4 {
       margin: 0;
       font-size: 1.5rem;
       color: #333;
   }

   .card-body {
       padding: 2rem;
   }

   .form-label {
       color: var(--text-primary);
       font-weight: 500;
       margin-bottom: 0.5rem;
   }

   .form-control {
       border-radius: 10px;
       border: 1px solid rgba(0,0,0,0.1);
       padding: 0.8rem;
       transition: all 0.3s ease;
   }

   .form-control:focus {
       box-shadow: 0 0 0 3px rgba(181, 216, 204, 0.3);
       border-color: var(--primary-color);
   }

   .form-select {
       border-radius: 10px;
       border: 1px solid rgba(0,0,0,0.1);
       padding: 0.8rem;
       background-color: white;
       transition: all 0.3s ease;
   }

   .form-select:focus {
       box-shadow: 0 0 0 3px rgba(181, 216, 204, 0.3);
       border-color: var(--primary-color);
   }

   .preview-box {
       width: 150px;
       height: 150px;
       border: 2px dashed var(--primary-color);
       border-radius: 12px;
       overflow: hidden;
       position: relative;
       cursor: pointer;
       transition: all 0.3s ease;
       background: white;
       display: flex;
       flex-direction: column;
       align-items: center;
       justify-content: center;
       padding: 15px;
   }

   .preview-box img {
       width: 100%;
       height: 100%;
       object-fit: cover;
       display: none;
   }

   .preview-box.has-image img {
       display: block;
   }

   .preview-box.has-image .upload-text {
       display: none;
   }

   .upload-text {
       text-align: center;
       color: var(--text-primary);
       transition: opacity 0.3s ease;
   }

   .upload-icon {
       font-size: 24px;
       color: var(--primary-color);
       margin-bottom: 10px;
   }

   .upload-message {
       font-size: 14px;
       margin: 0;
       color: var(--text-primary);
   }

   .upload-hint {
       font-size: 12px;
       margin-top: 5px;
       color: var(--text-primary);
       opacity: 0.8;
   }

   .remove-image {
       position: absolute;
       top: 8px;
       right: 8px;
       background: var(--danger-color);
       color: white;
       border: none;
       border-radius: 50%;
       width: 28px;
       height: 28px;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       z-index: 1;
   }

   .remove-image:hover {
       transform: scale(1.1);
       background: #ff8080;
   }

   .cropper-modal {
       display: none;
       position: fixed;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0);
       z-index: 1050;
       overflow: auto;
   }

   .cropper-content {
       position: relative;
       width: 90%;
       max-width: 1000px;
       margin: 2% auto;
       background: #fff;
       padding: 20px;
       border-radius: 8px;
       box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
   }

   .cropper-container {
       height: 70vh;
       max-height: 600px;
       background: #f8f9fa;
       margin-bottom: 20px;
       border-radius: 4px;
       overflow: hidden;
   }

   #cropperImage {
       max-width: 100%;
       max-height: 100%;
       display: block;
   }

   .cropper-actions {
       display: flex;
       gap: 10px;
       justify-content: center;
       flex-wrap: wrap;
       padding: 15px 0;
   }

   .cropper-actions button {
       padding: 10px 20px;
       font-size: 1rem;
       display: flex;
       align-items: center;
       gap: 8px;
       border-radius: 4px;
       transition: all 0.3s ease;
   }

   .cropper-actions button:hover {
       transform: translateY(-2px);
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
   }

   .cropper-actions button i {
       font-size: 1.2rem;
   }

   .cropper-view-box,
   .cropper-face {
       border-radius: 8px;
   }

   .cropper-modal {
       background-color: rgba(0, 0, 0, 0.85);
   }

   .cropper-line,
   .cropper-point {
       background-color: #007bff;
   }

   .cropper-view-box {
       box-shadow: 0 0 0 1px #007bff;
       outline: 0;
   }

   .cropper-point {
       width: 10px;
       height: 10px;
       opacity: 1;
   }

   .cropper-point.point-n,
   .cropper-point.point-s,
   .cropper-point.point-e,
   .cropper-point.point-w {
       width: 12px;
       height: 12px;
   }

   .zoom-controls {
       position: absolute;
       right: 20px;
       top: 50%;
       transform: translateY(-50%);
       display: flex;
       flex-direction: column;
       gap: 10px;
       background: rgba(255, 255, 255, 0.9);
       padding: 10px;
       border-radius: 8px;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
   }

   .zoom-controls button {
       width: 40px;
       height: 40px;
       padding: 0;
       display: flex;
       align-items: center;
       justify-content: center;
       border-radius: 4px;
   }

   .cropper-close {
       position: absolute;
       top: 10px;
       right: 10px;
       background: none;
       border: none;
       font-size: 1.5rem;
       color: #dc3545;
       cursor: pointer;
       padding: 5px;
       transition: transform 0.3s ease;
   }

   .cropper-close:hover {
       transform: scale(1.1);
   }

   @media (max-width: 768px) {
       .cropper-content {
           width: 95%;
           margin: 10px auto;
           padding: 15px;
       }

       .cropper-container {
           height: 50vh;
       }

       .cropper-actions {
           padding: 10px 0;
       }

       .cropper-actions button {
           padding: 8px 15px;
           font-size: 0.9rem;
       }

       .zoom-controls {
           position: static;
           transform: none;
           flex-direction: row;
           justify-content: center;
           margin-top: 10px;
       }
   }

   .variant-item {
       border: 1px solid #ddd;
       border-radius: 5px;
       padding: 15px;
       background-color: #fafafa;
       margin-bottom: 15px;
   }

   .remove-variant {
       margin-top: 10px;
       background-color: #f44336;
   }

   .remove-variant:hover {
       background-color: #d32f2f;
   }

   .variant-upload-box {
       width: 200px;
       height: 200px;
   }

   .image-upload-grid {
       display: grid;
       grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
       gap: 1rem;
       margin-bottom: 1rem;
   }

   .image-upload-box {
       position: relative;
       border: 2px dashed #ccc;
       border-radius: 8px;
       overflow: hidden;
       cursor: pointer;
       transition: all 0.3s ease;
   }

   .image-upload-box:hover {
       border-color: #007bff;
   }

   .preview-container {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       display: none;
   }

   .preview-image {
       width: 100%;
       height: 100%;
       object-fit: cover;
   }

   .upload-content {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       display: flex;
       flex-direction: column;
       align-items: center;
       justify-content: center;
       padding: 1rem;
       text-align: center;
   }

   .upload-icon {
       font-size: 2.5rem;
       color: #6c757d;
       margin-bottom: 0.5rem;
   }

   .upload-text h5 {
       margin: 0;
       font-size: 1rem;
       color: #495057;
   }

   .upload-text p {
       margin: 0;
       font-size: 0.875rem;
       color: #6c757d;
   }

   .has-image .preview-container {
       display: block;
   }

   .has-image .upload-content {
       display: none;
   }

   .remove-image {
       position: absolute;
       top: 5px;
       right: 5px;
       background: rgba(255, 255, 255, 0.9);
       border: none;
       border-radius: 50%;
       width: 24px;
       height: 24px;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       z-index: 1;
   }

   .remove-image:hover {
       background: rgba(255, 255, 255, 1);
   }

   /* Add validation styles */
   .error-message {
       color: #dc3545;
       font-size: 0.875rem;
       margin-top: 0.25rem;
       display: none;
   }

   .form-control.is-invalid {
       border-color: #dc3545;
       padding-right: calc(1.5em + 0.75rem);
       background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
       background-repeat: no-repeat;
       background-position: right calc(0.375em + 0.1875rem) center;
       background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
   }

   .form-control.is-invalid:focus {
       border-color: #dc3545;
       box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
   }

   .form-control.is-valid {
       border-color: #198754;
       padding-right: calc(1.5em + 0.75rem);
       background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");
       background-repeat: no-repeat;
       background-position: right calc(0.375em + 0.1875rem) center;
       background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
   }

   .form-control.is-valid:focus {
       border-color: #198754;
       box-shadow: 0 0 0 0.25rem rgba(25, 135, 84, 0.25);
   }

   /* Cropper Modal Styles */
   .cropper-modal {
       display: none;
       position: fixed;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       background-color: rgba(0, 0, 0, 0.85);
       z-index: 9999;
       overflow: auto;
   }

   .cropper-content {
       position: relative;
       width: 90%;
       max-width: 1000px;
       margin: 30px auto;
       background-color: #fff;
       padding: 20px;
       border-radius: 15px;
       box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
   }

   .cropper-header {
       display: flex;
       justify-content: space-between;
       align-items: center;
       margin-bottom: 20px;
   }

   .cropper-header h5 {
       margin: 0;
       font-size: 1.25rem;
       color: #333;
   }

   .cropper-container {
       height: 70vh;
       max-height: 600px;
       background: #f8f9fa;
       border: 1px solid #ddd;
       margin-bottom: 20px;
       border-radius: 8px;
       overflow: hidden;
   }

   #cropperImage {
       max-width: 100%;
       max-height: 100%;
       display: block;
   }

   .cropper-actions {
       display: flex;
       gap: 15px;
       justify-content: center;
       padding: 10px 0;
   }

   .cropper-actions button {
       padding: 10px 20px;
       font-size: 1rem;
       border-radius: 8px;
       border: none;
       cursor: pointer;
       display: flex;
       align-items: center;
       gap: 8px;
       transition: all 0.3s ease;
   }

   .crop-btn {
       background: var(--primary-color);
       color: white;
   }

   .cancel-btn {
       background: #6c757d;
       color: white;
   }

   .close-btn {
       background: none;
       border: none;
       font-size: 1.5rem;
       color: #6c757d;
       cursor: pointer;
       padding: 0;
       transition: color 0.3s ease;
   }

   .close-btn:hover {
       color: #333;
   }

   .cropper-bg {
       
       background-color: #ffffff !important;
   }

   .cropper-modal {
       opacity: 1 !important;
       
   }


   .zoom-controls {
       position: fixed;
       right: 30px;
       top: 50%;
       transform: translateY(-50%);
       display: flex;
       flex-direction: column;
       gap: 15px;
       z-index: 10000;
   }

   .zoom-btn {
       width: 45px;
       height: 45px;
       border-radius: 50%;
       border: none;
       background: white;
       color: #333;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
   }

   .zoom-btn:hover {
       background: var(--primary-color);
       color: white;
       transform: scale(1.1);
   }

   /* Preview Box Styles */
   .preview-box {
       width: 150px;
       height: 150px;
       border: 2px dashed #ddd;
       border-radius: 8px;
       position: relative;
       overflow: hidden;
       cursor: pointer;
       transition: all 0.3s ease;
       background: #f8f9fa;
   }

   .preview-box:hover {
       border-color: var(--primary-color);
   }

   .preview-box.has-image {
       border-style: solid;
   }

   .preview-image {
       width: 100%;
       height: 100%;
       object-fit: cover;
   }

   .upload-text {
       position: absolute;
       top: 50%;
       left: 50%;
       transform: translate(-50%, -50%);
       text-align: center;
       color: #6c757d;
   }

   .upload-icon {
       font-size: 2rem;
       margin-bottom: 8px;
   }

   .upload-message {
       margin: 0;
       font-size: 0.9rem;
       font-weight: 500;
   }

   .upload-hint {
       margin: 4px 0 0;
       font-size: 0.8rem;
       opacity: 0.7;
   }

   .remove-image {
       position: absolute;
       top: 5px;
       right: 5px;
       width: 24px;
       height: 24px;
       border-radius: 50%;
       background: rgba(220, 53, 69, 0.9);
       color: white;
       border: none;
       display: none;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       z-index: 1;
   }

   .remove-image:hover {
       background: #dc3545;
       transform: scale(1.1);
   }

   .has-image .remove-image {
       display: flex;
   }

   :root {
       --primary-color: #B5D8CC;
       --secondary-color: #E8B4BC;
       --accent-color: #FFD9C0;
       --background-light: #F8F6F4;
       --text-dark: #2C3333;
       --text-light: #F8F6F4;
       --success-color: #28a745;
       --danger-color: #dc3545;
       --warning-color: #ffc107;
       --info-color: #17a2b8;
   }

   .variant-item {
       position: relative;
       background: var(--background-light);
       transition: all 0.3s ease;
   }

   .variant-item:hover {
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
   }

   .remove-variant {
       opacity: 0.8;
       transition: all 0.3s ease;
   }

   .remove-variant:hover {
       opacity: 1;
       transform: scale(1.1);
   }

   #addVariant {
       background-color: var(--primary-color);
       border-color: var(--primary-color);
       color: var(--text-dark);
       transition: all 0.3s ease;
   }

   #addVariant:hover {
       background-color: var(--secondary-color);
       border-color: var(--secondary-color);
       transform: translateY(-1px);
   }

   #addVariant i {
       margin-right: 5px;
   }
   .crop-btn {
       background: var(--primary-color);
       color: white;
   }

   .cancel-btn {
       background: #6c757d;
       color: white;
   }

   .close-btn {
       background: none;
       border: none;
       font-size: 1.5rem;
       color: #6c757d;
       cursor: pointer;
       padding: 0;
       transition: color 0.3s ease;
   }

   .close-btn:hover {
       color: #333;
   }

   .zoom-controls {
       position: fixed;
       right: 30px;
       top: 50%;
       transform: translateY(-50%);
       display: flex;
       flex-direction: column;
       gap: 15px;
       z-index: 10000;
   }

   .zoom-btn {
       width: 45px;
       height: 45px;
       border-radius: 50%;
       border: none;
       background: white;
       color: #333;
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
   }

   .zoom-btn:hover {
       background: var(--primary-color);
       color: white;
       transform: scale(1.1);
   }

   /* Preview Box Styles */
   .preview-box {
       width: 150px;
       height: 150px;
       border: 2px dashed #ddd;
       border-radius: 8px;
       position: relative;
       overflow: hidden;
       cursor: pointer;
       transition: all 0.3s ease;
       background: #f8f9fa;
   }

   .preview-box:hover {
       border-color: var(--primary-color);
   }

   .preview-box.has-image {
       border-style: solid;
   }

   .preview-image {
       width: 100%;
       height: 100%;
       object-fit: cover;
   }

   .upload-text {
       position: absolute;
       top: 50%;
       left: 50%;
       transform: translate(-50%, -50%);
       text-align: center;
       color: #6c757d;
   }

   .upload-icon {
       font-size: 2rem;
       margin-bottom: 8px;
   }

   .upload-message {
       margin: 0;
       font-size: 0.9rem;
       font-weight: 500;
   }

   .upload-hint {
       margin: 4px 0 0;
       font-size: 0.8rem;
       opacity: 0.7;
   }

   .remove-image {
       position: absolute;
       top: 5px;
       right: 5px;
       width: 24px;
       height: 24px;
       border-radius: 50%;
       background: rgba(220, 53, 69, 0.9);
       color: white;
       border: none;
       display: none;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
       z-index: 1;
   }

   .remove-image:hover {
       background: #dc3545;
       transform: scale(1.1);
   }

   .has-image .remove-image {
       display: flex;
   }

   :root {
       --primary-color: #B5D8CC;
       --secondary-color: #E8B4BC;
       --accent-color: #FFD9C0;
       --background-light: #F8F6F4;
       --text-dark: #2C3333;
       --text-light: #F8F6F4;
       --success-color: #28a745;
       --danger-color: #dc3545;
       --warning-color: #ffc107;
       --info-color: #17a2b8;
   }

   .variant-item {
       position: relative;
       background: var(--background-light);
       transition: all 0.3s ease;
   }

   .variant-item:hover {
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
   }

   .remove-variant {
       opacity: 0.8;
       transition: all 0.3s ease;
   }

   .remove-variant:hover {
       opacity: 1;
       transform: scale(1.1);
   }

   #addVariant {
       background-color: var(--primary-color);
       border-color: var(--primary-color);
       color: var(--text-dark);
       transition: all 0.3s ease;
   }

   #addVariant:hover {
       background-color: var(--secondary-color);
       border-color: var(--secondary-color);
       transform: translateY(-1px);
   }

   #addVariant i {
       margin-right: 5px;
   }
</style>
<body>
 

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <form id="addProductForm" method="post" action="/admin/addProducts" enctype="multipart/form-data">
                    <div class="card">
                        <div class="card-header">
                            <h4>Add New Product</h4>
                        </div>
                        <div class="card-body">
                            <!-- Basic Information -->
                            <div class="row mb-4">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="product_name" class="form-label">Product Name</label>
                                        <input type="text" class="form-control" id="product_name" name="name" >
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="brand" class="form-label">Brand</label>
                                        <input type="text" class="form-control" id="brand" name="brand">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="category" class="form-label">Category</label>
                                        <select class="form-select" id="category" name="category" >
                                            <option value="">Select Category</option>
                                            <% if (categories && categories.length > 0) { %>
                                                <% categories.forEach(function(category) { %>
                                                    <option value="<%= category._id %>"><%= category.name %></option>
                                                <% }); %>
                                            <% } %>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="regular_price" class="form-label">Regular Price</label>
                                        <input type="number" class="form-control" id="regular_price" name="regularPrice">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="sale_price" class="form-label">Sale Price</label>
                                        <input type="number" class="form-control" id="sale_price" name="salePrice" >
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label for="description" class="form-label">Description</label>
                                        <textarea class="form-control" id="description" name="description" rows="3" ></textarea>
                                    </div>
                                </div>
                            </div>

                            <!-- Color Variants -->
                            <div class="border-top pt-4">
                                <div class="d-flex justify-content-between align-items-center mb-4">
                                    <div>
                                        <h5 class="mb-1">Color Variants</h5>
                                        <p class="text-muted mb-0">Add different color variants of your product</p>
                                    </div>
                                    <button type="button" class="btn btn-primary" id="addVariant">
                                        <i class="fas fa-plus"></i> Add Variant
                                    </button>
                                </div>
                                <div id="variantsContainer"></div>
                            </div>

                            <!-- Submit Button -->
                            <div class="border-top pt-4 mt-4 text-end">
                                <button type="submit" class="btn btn-primary">Add Product</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Variant Template (hidden) -->
<template id="variantTemplate">
    <div class="variant-item border rounded p-3 mb-3">
        <button type="button" class="remove-variant btn btn-danger btn-sm position-absolute top-0 end-0 m-2">
            <i class="fas fa-times"></i>
        </button>
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Color</label>
                    <input type="text" class="form-control variant-color">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label class="form-label">Quantity</label>
                    <input type="number" class="form-control variant-quantity" required min="1">
                </div>
            </div>
            <div class="col-12">
                <label class="form-label">Variant Images</label>
                <div class="d-flex gap-3">
                    <div class="preview-box variant-preview-box" data-index="0">
                        <img src="" alt="" class="preview-image" style="display: none;">
                        <div class="upload-text">
                            <i class="fas fa-cloud-upload-alt upload-icon"></i>
                            <p class="upload-message">Click to upload</p>
                            <p class="upload-hint">or drag and drop</p>
                        </div>
                    </div>
                    
                    <div class="preview-box variant-preview-box" data-index="1">
                        <img src="" alt="" class="preview-image" style="display: none;">
                        <div class="upload-text">
                            <i class="fas fa-cloud-upload-alt upload-icon"></i>
                            <p class="upload-message">Click to upload</p>
                            <p class="upload-hint">or drag and drop</p>
                        </div>
                    </div>
                    
                    <div class="preview-box variant-preview-box" data-index="2">
                        <img src="" alt="" class="preview-image" style="display: none;">
                        <div class="upload-text">
                            <i class="fas fa-cloud-upload-alt upload-icon"></i>
                            <p class="upload-message">Click to upload</p>
                            <p class="upload-hint">or drag and drop</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

<!-- Cropper Modal -->
<div class="cropper-modal">
    <div class="cropper-content">
        <div class="cropper-header">
            <h5>Crop Image</h5>
            <button type="button" class="close-btn">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="cropper-container">
            <img id="cropperImage" src="" alt="Image to crop">
        </div>
        <div class="cropper-actions">
            <button type="button" class="crop-btn">
                <i class="fas fa-crop"></i> Crop & Save
            </button>
            <button type="button" class="cancel-btn">
                <i class="fas fa-times"></i> Cancel
            </button>
        </div>
    </div>
    <div class="zoom-controls">
        <button type="button" class="zoom-btn zoom-in">
            <i class="fas fa-search-plus"></i>
        </button>
        <button type="button" class="zoom-btn zoom-out">
            <i class="fas fa-search-minus"></i>
        </button>
    </div>
</div>

<script>
    let cropper = null;
    let currentImageBox = null;
    const maxVariants = 5;

    function initializeImageBox(box) {
        // Create file input once and store it
        const input = document.createElement('input');
        input.type = 'file';
        input.accept = 'image/*';
        input.style.display = 'none';
        
        input.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        openCropperModal(box, e.target.result);
                    };
                    reader.readAsDataURL(file);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid File Type',
                        text: 'Please select an image file.'
                    });
                }
            }
        });
        
        box.appendChild(input);

        // Single click handler for the box
        const clickHandler = (e) => {
            if (!box.classList.contains('has-image')) {
                input.click();
            }
        };
        
        // Remove any existing click listeners
        box.removeEventListener('click', clickHandler);
        // Add new click listener
        box.addEventListener('click', clickHandler);

        // Add remove button if it doesn't exist
        let removeBtn = box.querySelector('.remove-image');
        if (!removeBtn) {
            removeBtn = document.createElement('button');
            removeBtn.className = 'remove-image';
            removeBtn.innerHTML = '<i class="fas fa-times"></i>';
            removeBtn.style.display = 'none';
            
            removeBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                const img = box.querySelector('.preview-image');
                const uploadText = box.querySelector('.upload-text');
                img.src = '';
                img.style.display = 'none';
                uploadText.style.display = 'block';
                box.classList.remove('has-image');
                removeBtn.style.display = 'none';
                input.value = ''; // Reset file input
            });
            
            box.appendChild(removeBtn);
        }
    }

    function initializeVariant(variantBox) {
        // Initialize preview boxes in the variant
        variantBox.querySelectorAll('.preview-box').forEach(box => {
            initializeImageBox(box);
        });

        // Add remove variant button handler
        const removeVariantBtn = variantBox.querySelector('.remove-variant');
        if (removeVariantBtn) {
            removeVariantBtn.addEventListener('click', function() {
                variantBox.remove();
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Initialize main product image boxes
        document.querySelectorAll('.main-preview-box').forEach(box => {
            initializeImageBox(box);
        });

        // Initialize cropper modal buttons
        const cropBtn = document.querySelector('.crop-btn');
        const cancelBtn = document.querySelector('.cancel-btn');
        const closeBtn = document.querySelector('.close-btn');
        const zoomInBtn = document.querySelector('.zoom-in');
        const zoomOutBtn = document.querySelector('.zoom-out');

        // Remove existing listeners before adding new ones
        cropBtn.replaceWith(cropBtn.cloneNode(true));
        cancelBtn.replaceWith(cancelBtn.cloneNode(true));
        closeBtn.replaceWith(closeBtn.cloneNode(true));
        zoomInBtn.replaceWith(zoomInBtn.cloneNode(true));
        zoomOutBtn.replaceWith(zoomOutBtn.cloneNode(true));

        // Re-query the elements after replacement
        document.querySelector('.crop-btn').addEventListener('click', () => {
            if (cropper && currentImageBox) {
                const canvas = cropper.getCroppedCanvas({
                    width: 600,
                    height: 600
                });

                const preview = currentImageBox.querySelector('.preview-image');
                preview.src = canvas.toDataURL('image/jpeg', 0.8);
                preview.style.display = 'block';
                currentImageBox.classList.add('has-image');

                const uploadText = currentImageBox.querySelector('.upload-text');
                if (uploadText) {
                    uploadText.style.display = 'none';
                }

                const removeBtn = currentImageBox.querySelector('.remove-image');
                if (removeBtn) {
                    removeBtn.style.display = 'block';
                }

                closeCropperModal();
            }
        });

        // Cancel and close buttons click handlers
        document.querySelector('.cancel-btn').addEventListener('click', closeCropperModal);
        document.querySelector('.close-btn').addEventListener('click', closeCropperModal);

        // Zoom controls
        document.querySelector('.zoom-in').addEventListener('click', () => {
            if (cropper) cropper.zoom(0.1);
        });

        document.querySelector('.zoom-out').addEventListener('click', () => {
            if (cropper) cropper.zoom(-0.1);
        });

        // Initialize add variant button
        const addVariantBtn = document.getElementById('addVariant');
        const variantsContainer = document.getElementById('variantsContainer');
        const variantTemplate = document.getElementById('variantTemplate');

        if (addVariantBtn && variantsContainer && variantTemplate) {
            addVariantBtn.addEventListener('click', function(e) {
                const variantCount = variantsContainer.children.length;
                
                if (variantCount >= maxVariants) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Maximum Variants Reached',
                        text: 'You can only add up to 5 variants.'
                    });
                    return;
                }

                // Clone the template content
                const clone = variantTemplate.content.cloneNode(true);
                const variantBox = clone.querySelector('.variant-item');

                // Initialize the new variant
                initializeVariant(variantBox);

                // Append to container
                variantsContainer.appendChild(clone);
            });
        }

        // Form submission handler
        const form = document.getElementById('addProductForm');
        if (form) {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Basic validation
                const requiredFields = this.querySelectorAll('[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value) {
                        isValid = false;
                        field.classList.add('is-invalid');
                    } else {
                        field.classList.remove('is-invalid');
                        field.classList.add('is-valid');
                    }
                });

                if (!isValid) {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Please fill in all required fields',
                        icon: 'error'
                    });
                    return;
                }

                try {
                    const formData = new FormData(this);
                    
                    // Add main product images
                    const mainImageBoxes = document.querySelectorAll('.main-preview-box.has-image');
                    for (let i = 0; i < mainImageBoxes.length; i++) {
                        const img = mainImageBoxes[i].querySelector('.preview-image');
                        if (img && img.src) {
                            const response = await fetch(img.src);
                            const blob = await response.blob();
                            formData.append('mainImages', blob, `main-image-${i}.jpg`);
                        }
                    }

                    // Add variant data and images
                    const variantBoxes = document.querySelectorAll('.variant-item');
                    for (let i = 0; i < variantBoxes.length; i++) {
                        const variantBox = variantBoxes[i];
                        
                        // Add variant details
                        const color = variantBox.querySelector('.variant-color').value;
                        const quantity = variantBox.querySelector('.variant-quantity').value;
                        formData.append(`variants[${i}][color]`, color);
                        formData.append(`variants[${i}][quantity]`, quantity);

                        // Add variant images
                        const variantImageBoxes = variantBox.querySelectorAll('.variant-preview-box.has-image');
                        for (let j = 0; j < variantImageBoxes.length; j++) {
                            const img = variantImageBoxes[j].querySelector('.preview-image');
                            if (img && img.src) {
                                const response = await fetch(img.src);
                                const blob = await response.blob();
                                formData.append('variantImages', blob, `variant-${i}-image-${j}.jpg`);
                            }
                        }
                    }

                    // Show loading state
                    Swal.fire({
                        title: 'Uploading...',
                        text: 'Please wait while we upload your product',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        willOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    // Send the form data
                    const response = await fetch('/admin/addProducts', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/admin/products';
                        });
                    } else {
                        throw new Error(result.message || 'Failed to add product');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message || 'Something went wrong. Please try again.'
                    });
                }
            });
        }

        // Initialize existing variants
        const existingVariants = document.querySelectorAll('.variant-item');
        existingVariants.forEach(variantBox => {
            initializeVariant(variantBox);
        });
    });

    function openCropperModal(box, imageUrl) {
        currentImageBox = box;
        const cropperModal = document.querySelector('.cropper-modal');
        const cropperImage = document.getElementById('cropperImage');
        
        // Reset cropper image
        cropperImage.src = '';
        cropperImage.src = imageUrl;
        
        cropperModal.style.display = 'block';
        
        if (cropper) {
            cropper.destroy();
        }
        
        cropper = new Cropper(cropperImage, {
            aspectRatio: 1,
            viewMode: 2,
            dragMode: 'move',
            autoCropArea: 1,
            restore: false,
            guides: true,
            center: true,
            highlight: false,
            cropBoxMovable: true,
            cropBoxResizable: true,
            toggleDragModeOnDblclick: false,
            ready: function() {
                // Ensure the cropper is properly initialized
                this.cropper.crop();
            }
        });
    }

    function closeCropperModal() {
        const cropperModal = document.querySelector('.cropper-modal');
        cropperModal.style.display = 'none';
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
        currentImageBox = null;
    }
</script>

<%- include("../../views/partials/admin/footer") %>

</body>
</html>
