<%- include("../partials/user/header.ejs") %>

<style>
    .orders-section {
        padding: 140px 0 100px;
        min-height: calc(100vh - 200px);
        background-color: #f7f9fc;
    }
    
    .page-title {
        font-size: 2.25rem;
        font-weight: 600;
        color: #1a1f36;
        margin-bottom: 3.5rem;
        text-align: center;
        letter-spacing: -0.5px;
    }
    
    .order-card {
        background: #ffffff;
        border-radius: 16px;
        margin-bottom: 2rem;
        transition: all 0.3s ease;
        border: 1px solid rgba(226, 232, 240, 0.8);
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }
    
    .order-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    }
    
    .order-header {
        padding: 1.75rem 2rem;
        background: linear-gradient(to right, #f8fafc, #ffffff);
        border-bottom: 1px solid rgba(226, 232, 240, 0.8);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .order-id {
        font-size: 1.125rem;
        font-weight: 600;
        color: #1a1f36;
        margin-bottom: 0.375rem;
        letter-spacing: -0.3px;
    }
    
    .order-date {
        color: #6b7280;
        font-size: 0.875rem;
        letter-spacing: -0.2px;
    }
    
    .order-body {
        padding: 2rem;
    }
    
    .order-info {
        display: grid;
        grid-template-columns: auto auto 1fr;
        align-items: center;
        gap: 2.5rem;
    }
    
    .order-amount {
        font-size: 1.375rem;
        font-weight: 600;
        color: #1a1f36;
        letter-spacing: -0.3px;
        white-space: nowrap;
    }
    
    .order-status {
        padding: 0.625rem 1.25rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 500;
        letter-spacing: -0.2px;
        text-align: center;
        white-space: nowrap;
    }

    .pending { 
        background: #fef9c3;
        color: #854d0e;
    }
    
    .processing { 
        background: #dbeafe;
        color: #1e40af;
    }
    
    .shipped { 
        background: #dcfce7;
        color: #166534;
    }
    
    .delivered { 
        background: #bbf7d0;
        color: #15803d;
    }
    
    .cancelled { 
        background: #fee2e2;
        color: #991b1b;
    }

    .order-actions {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 12px;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.3s ease;
        letter-spacing: -0.2px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .btn-view {
        background-color: #4f46e5;
        color: white;
        border: none;
    }
    
    .btn-view:hover {
        background-color: #4338ca;
        transform: translateY(-1px);
    }
    
    .btn-cancel {
        background-color: #ffffff;
        color: #ef4444;
        border: 1px solid #fca5a5;
    }
    
    .btn-cancel:hover {
        background-color: #fee2e2;
        border-color: #ef4444;
        transform: translateY(-1px);
    }
    
    .empty-state {
        text-align: center;
        padding: 5rem 2rem;
        background: #ffffff;
        border-radius: 24px;
        margin-top: 2rem;
        border: 1px solid rgba(226, 232, 240, 0.8);
        box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
    }
    
    .empty-state h4 {
        font-size: 1.5rem;
        color: #1a1f36;
        margin-bottom: 1rem;
        font-weight: 600;
        letter-spacing: -0.3px;
    }
    
    .empty-state p {
        color: #6b7280;
        margin-bottom: 2.5rem;
        font-size: 1rem;
        line-height: 1.6;
        letter-spacing: -0.2px;
    }
    
    .btn-shop {
        background-color: #4f46e5;
        color: white;
        border: none;
        padding: 1rem 2.5rem;
        font-size: 1rem;
    }
    
    .btn-shop:hover {
        background-color: #4338ca;
        transform: translateY(-1px);
    }

    /* Add subtle animations */
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .order-card {
        animation: fadeIn 0.5s ease-out;
        animation-fill-mode: both;
    }

    .order-card:nth-child(2) { animation-delay: 0.1s; }
    .order-card:nth-child(3) { animation-delay: 0.2s; }
    .order-card:nth-child(4) { animation-delay: 0.3s; }

    @media (max-width: 768px) {
        .page-title {
            font-size: 1.875rem;
            margin-bottom: 2.5rem;
        }

        .order-info {
            grid-template-columns: 1fr;
            gap: 1.5rem;
        }
        
        .order-status {
            text-align: left;
        }

        .order-actions {
            justify-content: stretch;
        }

        .btn {
            flex: 1;
        }
    }
</style>

<section class="orders-section">
    <div class="container">
        <h1 class="page-title">My Orders</h1>
        
        <% if (orders && orders.length > 0) { %>
            <div class="row">
                <% orders.forEach(order => { %>
                    <div class="col-12">
                        <div class="order-card">
                            <div class="order-header">
                                <div>
                                    <div class="order-id">#<%= order.orderId %></div>
                                    <div class="order-date">
                                        <%= 
                            order.createdOn ? new Date(order.createdOn).toLocaleDateString('en-IN', { 
                                year: 'numeric', 
                                month: 'long', 
                                day: 'numeric' 
                            }) : 'N/A'
                        %></div>
                                </div>
                              
                            </div>
                            <div class="order-body">
                                <div class="order-info">
                                    <div class="order-amount">â‚¹<%= (order.finalAmount || 0).toLocaleString('en-IN') %></div>
                                    <div class="order-status <%= order.status.toLowerCase() %>">
                                        <%= order.status %>
                                    </div>
                                    <div class="order-actions">
                                        <a href="/order/<%= order._id %>" class="btn btn-view">View Details</a>
                                        <% if (order.status === 'Processing') { %>
                                            <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-cancel">Cancel Order</button>
                                        <% } %>
                                    </div>
                                    <div class="info-item">
                                        <div class="info-label">Payment Method</div>
                                        <div class="info-value"><%= order.paymentMethod %></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="empty-state">
                <h4>No Orders Yet</h4>
                <p>Looks like you haven't placed any orders. Start shopping to see your orders here!</p>
                <a href="/" class="btn btn-shop">Start Shopping</a>
            </div>
        <% } %>
    </div>
</section>

<script>
    async function cancelOrder(orderId) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "You want to cancel this order?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, cancel it!'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch(`/cancel-order/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                const data = await response.json();
                if (data.success) {
                    await Swal.fire({
                        title: 'Cancelled!',
                        text: 'Your order has been cancelled.',
                        icon: 'success'
                    });
                    location.reload();
                } else {
                    await Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to cancel order',
                        icon: 'error'
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while cancelling the order',
                    icon: 'error'
                });
            }
        }
    }
</script>

<%- include("../partials/user/footer.ejs") %>
