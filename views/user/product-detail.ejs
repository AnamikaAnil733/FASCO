<%- include("../../views/partials/user/header") %>
<!-- Add SweetAlert2 CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-material-ui/material-ui.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<div class="product-detail">
    <!-- Breadcrumb -->
    <div class="container">
        <nav class="breadcrumb-nav" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
                <li class="breadcrumb-item active"><%= product.productName %></li>
            </ol>
        </nav>
    </div>

    <!-- Product Section -->
    <div class="container">
        <div class="product-container">
            <!-- Product Images -->
            <div class="product-gallery">
                <div class="main-image wrap-pic-w">
                    <% if (product.variants && product.variants.length > 0 && product.variants[0].images && product.variants[0].images.length > 0) { %>
                        <img id="mainImage" 
                            src="/uploads/product-images/<%= product.variants[0].images[0] %>" 
                            alt="<%= product.productName %>">
                    <% } else { %>
                        <img id="mainImage" 
                            src="/images/no-image.png" 
                            alt="No image available">
                    <% } %>
                    <div id="zoomResult" class="zoom-result"></div>
                </div>
                
                <!-- Thumbnails -->
                <div class="thumbnails">
                    <% if (product.variants && product.variants.length > 0) { %>
                        <% product.variants.forEach((variant, variantIndex) => { %>
                            <% if (variant.images && variant.images.length > 0) { %>
                                <% variant.images.forEach((image, imageIndex) => { %>
                                    <div class="thumbnail" onclick="updateMainImage('/uploads/product-images/<%= image %>', <%= variantIndex %>)">
                                        <img src="/uploads/product-images/<%= image %>" 
                                            alt="<%= product.productName %> - <%= variant.color %>">
                                    </div>
                                <% }); %>
                            <% } %>
                        <% }); %>
                    <% } %>
                </div>
            </div>

            <!-- Product Info -->
            <div class="product-info">
                <h1 class="product-title"><%= product.productName %></h1>
                
                <!-- Price -->
                <div class="price-section">
                    <div class="current-price">₹<%= product.salesPrice %></div>
                    <% if (product.regularPrice > product.salesPrice) { %>
                        <div class="original-price">₹<%= product.regularPrice %></div>
                        <div class="discount-badge">
                            <%= Math.round((product.regularPrice - product.salesPrice) / product.regularPrice * 100) %>% OFF
                        </div>
                    <% } %>
                </div>

                <p class="product-description"><%= product.description %></p>

                <!-- Color Selection -->
                <div class="colors-section">
                    <h3>Available Colors</h3>
                    <div class="color-options">
                        <% if (product.variants && product.variants.length > 0) { %>
                            <% product.variants.forEach((variant, index) => { %>
                                <div class="color-option">
                                    <button class="color-btn <%= index === 0 ? 'active' : '' %>"
                                            onclick="selectColor('<%= variant.color %>', <%= index %>)"
                                            data-quantity="<%= variant.quantity %>"
                                            style="background-color: <%= variant.color.toLowerCase() %>">
                                        <span class="color-name"><%= variant.color %></span>
                                    </button>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>

                <!-- Quantity -->
                <div class="quantity-section">
                    <h3>Quantity</h3>
                    <div class="stock-info">
                        <% if (product.variants && product.variants.length > 0) { %>
                            <p class="available-stock">Available Stock: <span id="current-stock"><%= product.variants[0].quantity %></span></p>
                        <% } %>
                    </div>
                    <div class="quantity-selector">
                        <button class="qty-btn" onclick="updateQuantity(-1)">−</button>
                        <input type="number" id="quantity" value="1" min="1" max="5">
                        <button class="qty-btn" onclick="updateQuantity(1)">+</button>
                    </div>
                    <small class="text-muted">Maximum 5 items per order</small>
                </div>

                <!-- Actions -->
                <div class="product-actions">
                    <button class="btn-add-cart" onclick="addToCart()" 
                            <%= (!product.variants || product.variants.length === 0) ? 'disabled' : '' %>>
                        <i class="fas fa-shopping-cart"></i>
                        <%= (!product.variants || product.variants.length === 0) ? 'Out of Stock' : 'Add to Cart' %>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Related Products Section -->
<section class="sec-relate-product bg0 p-t-45 p-b-105">
    <div class="container">
        <div class="p-b-45">
            <h3 class="ltext-106 cl5 txt-center">
                Related Products
            </h3>
        </div>

        <!-- Related Products Grid -->
        <div class="row isotope-grid">
            <% relatedProducts.forEach(function(relatedProduct) { %>
                <% if (relatedProduct.variants && relatedProduct.variants.length > 0) { %>
                    <div class="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item">
                        <div class="block2">
                            <div class="block2-pic hov-img0">
                                <% if (relatedProduct.variants[0] && relatedProduct.variants[0].images && relatedProduct.variants[0].images.length > 0) { %>
                                    <img src="/uploads/product-images/<%= relatedProduct.variants[0].images[0] %>" alt="<%= relatedProduct.productName %>" class="product-image">
                                <% } else { %>
                                    <img src="/images/no-image.png" alt="No image available" class="product-image">
                                <% } %>
                                <a href="/product/<%= relatedProduct._id %>" class="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04">
                                    Quick View
                                </a>
                            </div>

                            <div class="block2-txt flex-w flex-t p-t-14">
                                <div class="block2-txt-child1 flex-col-l">
                                    <a href="/product/<%= relatedProduct._id %>" class="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6">
                                        <%= relatedProduct.productName %>
                                    </a>

                                    <span class="stext-105 cl3">
                                        ₹<%= relatedProduct.salesPrice %>
                                        <% if (relatedProduct.regularPrice > relatedProduct.salesPrice) { %>
                                            <span class="stext-109 cl4 text-decoration-line-through ms-2">₹<%= relatedProduct.regularPrice %></span>
                                        <% } %>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                <% } %>
            <% }); %>
        </div>
    </div>
</section>

<style>
/* Product Detail Page Styles */
.product-detail {
    padding: 150px 0;
    background-color: #fff;
    min-height: calc(100vh - 300px); /* Adjusted for decreased padding */
}

/* Breadcrumb */
.breadcrumb-nav {
    margin-bottom: 20px;
}

.breadcrumb {
    padding: 0;
    margin: 0;
    background: transparent;
}

.breadcrumb-item a {
    color: #666;
    text-decoration: none;
    transition: color 0.3s ease;
}

.breadcrumb-item a:hover {
    color: #000;
}

.breadcrumb-item.active {
    color: #000;
}

/* Product Container */
.product-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    align-items: start;
}

/* Product Gallery */
.product-gallery {
    position: sticky;
    top: 20px;
}

.main-image {
    background: #f8f9fa;
    border-radius: 12px;
    overflow: hidden;
    margin-bottom: 20px;
    aspect-ratio: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}

.main-image img {
    max-width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.3s ease;
}

.main-image:hover img {
    transform: scale(1.05);
}

.thumbnails {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
    gap: 10px;
}

.thumbnail {
    aspect-ratio: 1;
    border-radius: 8px;
    overflow: hidden;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.3s ease;
}

.thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.thumbnail:hover {
    border-color: #000;
    transform: translateY(-2px);
}

/* Zoom Styles */
.main-image {
    position: relative;
    overflow: hidden;
}

.zoom-lens {
    position: absolute;
    border: 1px solid #d4d4d4;
    width: 100px;
    height: 100px;
    background-repeat: no-repeat;
    cursor: crosshair;
    display: none;
}

.zoom-result {
    position: absolute;
    top: 0;
    right: -100%;
    width: 100%;
    height: 100%;
    border: 1px solid #d4d4d4;
    background-repeat: no-repeat;
    display: none;
    z-index: 999;
    background-color: white;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    border-radius: 12px;
}

.main-image:hover .zoom-lens,
.main-image:hover .zoom-result {
    display: block;
}

/* Zoom Effect Styles */
.wrap-pic-w {
    position: relative;
    overflow: hidden;
    width: 100%;
    height: 100%;
}

.wrap-pic-w img {
    transition: transform 0.3s ease;
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.wrap-pic-w.zoom-effect {
    cursor: zoom-in;
}

.wrap-pic-w img:hover {
    cursor: zoom-in;
}

/* Product Info */
.product-info {
    padding: 20px;
}

.product-title {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 20px;
    color: #000;
}

.price-section {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 30px;
}

.current-price {
    font-size: 2rem;
    font-weight: 600;
    color: #000;
}

.original-price {
    font-size: 1.5rem;
    color: #999;
    text-decoration: line-through;
}

.discount-badge {
    background: #ff4d4d;
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.9rem;
    font-weight: 500;
}

.product-description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: #666;
    margin-bottom: 30px;
}

/* Color Selection */
.colors-section {
    margin-bottom: 30px;
}

.colors-section h3 {
    font-size: 1.2rem;
    margin-bottom: 15px;
    color: #000;
}

.color-options {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
}

.color-option {
    position: relative;
}

.color-btn {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
}

.color-btn:hover {
    transform: scale(1.1);
}

.color-btn.active {
    border-color: #000;
    transform: scale(1.1);
}

.color-name {
    position: absolute;
    bottom: -25px;
    left: 50%;
    transform: translateX(-50%);
    white-space: nowrap;
    font-size: 0.8rem;
    color: #666;
}

/* Quantity Selector */
.quantity-section {
    margin-bottom: 30px;
}

.quantity-section h3 {
    font-size: 1.2rem;
    margin-bottom: 15px;
    color: #000;
}

.quantity-selector {
    display: inline-flex;
    align-items: center;
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
}

.qty-btn {
    width: 40px;
    height: 40px;
    border: none;
    background: #f8f9fa;
    color: #000;
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.qty-btn:hover {
    background: #000;
    color: #fff;
}

#quantity {
    width: 60px;
    height: 40px;
    border: none;
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    text-align: center;
    font-size: 1rem;
    -moz-appearance: textfield;
}

#quantity::-webkit-outer-spin-button,
#quantity::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.stock-info {
    margin-bottom: 10px;
}

.available-stock {
    font-size: 0.9em;
    color: #666;
    margin: 5px 0;
}

#current-stock {
    font-weight: bold;
    color: #28a745;
}

/* Action Buttons */
.product-actions {
    display: flex;
    gap: 15px;
}

.btn-add-cart {
    flex: 1;
    padding: 15px 30px;
    border: none;
    border-radius: 8px;
    background: #000;
    color: #fff;
    font-size: 1.1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.btn-add-cart:hover {
    background: #333;
    transform: translateY(-2px);
}

.btn-add-cart:disabled {
    background: #ccc;
    cursor: not-allowed;
    transform: none;
}

/* Responsive Design */
@media (max-width: 768px) {
    .product-container {
        grid-template-columns: 1fr;
        gap: 20px;
    }

    .product-gallery {
        position: relative;
        top: 0;
    }

    .product-title {
        font-size: 2rem;
    }

    .current-price {
        font-size: 1.8rem;
    }

    .original-price {
        font-size: 1.3rem;
    }
}
/* Related Products Styles */
.sec-relate-product {
    background-color: #f8f9fa;
    padding: 60px 0;
}

.sec-relate-product h3 {
    font-size: 2rem;
    color: #333;
    margin-bottom: 30px;
    text-align: center;
}

.block2 {
    position: relative;
    margin-bottom: 30px;
}

.block2-pic {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
}

.block2-pic img {
    width: 100%;
    height: 300px;
    object-fit: cover;
    transition: transform 0.3s;
}

.block2:hover .block2-pic img {
    transform: scale(1.05);
}

.block2-btn {
    position: absolute;
    bottom: -50px;
    left: 50%;
    transform: translateX(-50%);
    transition: bottom 0.3s;
    background: white;
    padding: 10px 20px;
    border-radius: 4px;
    text-decoration: none;
    color: #333;
}

.block2:hover .block2-btn {
    bottom: 20px;
}

.block2-txt {
    padding: 15px;
    text-align: center;
}

.block2-txt-child1 a {
    color: #333;
    text-decoration: none;
    font-weight: 500;
    margin-bottom: 8px;
    display: block;
}

.block2-txt-child1 .stext-105 {
    color: #717fe0;
    font-weight: 600;
}

.text-decoration-line-through {
    text-decoration: line-through;
    color: #999;
    margin-left: 8px;
}
</style>

<script>
const variants = <%- JSON.stringify(product.variants) %>;
let currentVariant = 0;

function updateQuantity(change) {
    const input = document.getElementById('quantity');
    const currentValue = parseInt(input.value) || 1;
    const variant = variants[currentVariant];
    const maxStock = Math.min(variant.quantity, 5); // Limit to 5 or available stock
    
    let newValue = currentValue + change;
    
    // Ensure the value stays between 1 and maxStock
    newValue = Math.max(1, Math.min(newValue, maxStock));
    
    input.value = newValue;
    
    // Update button states
    document.querySelector('.qty-btn:first-child').disabled = newValue <= 1;
    document.querySelector('.qty-btn:last-child').disabled = newValue >= maxStock;
}

function selectColor(color, index) {
    // Update active color button
    document.querySelectorAll('.color-btn').forEach(btn => btn.classList.remove('active'));
    document.querySelectorAll('.color-btn')[index].classList.add('active');
    
    // Update current variant index
    currentVariant = index;
    
    // Update stock display
    const variant = variants[index];
    document.getElementById('current-stock').textContent = variant.quantity;
}

function addToCart() {
    const quantity = parseInt(document.getElementById('quantity').value);
    const variant = variants[currentVariant];
    const maxStock = Math.min(variant.quantity, 5); // Limit to 5 or available stock
    
    if (quantity > maxStock) {
        Swal.fire({
            title: 'Quantity Limit Exceeded',
            text: 'Maximum quantity limit is 5 items per product',
            icon: 'warning',
            confirmButtonText: 'OK',
            confirmButtonColor: '#3085d6'
        });
        return;
    }
    
    if (quantity < 1) {
        Swal.fire({
            title: 'Invalid Quantity',
            text: 'Please select at least 1 item',
            icon: 'warning',
            confirmButtonText: 'OK',
            confirmButtonColor: '#3085d6'
        });
        return;
    }
    
    // Show loading state
    Swal.fire({
        title: 'Adding to Cart',
        text: 'Please wait...',
        allowOutsideClick: false,
        showConfirmButton: false,
        willOpen: () => {
            Swal.showLoading();
        }
    });

    fetch('/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            productId: '<%= product._id %>',
            quantity: quantity,
            variantIndex: currentVariant
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            updateCartCount();
            Swal.fire({
                title: 'Success!',
                text: 'Product added to cart successfully!',
                icon: 'success',
                confirmButtonText: 'Continue Shopping',
                showCancelButton: true,
                cancelButtonText: 'View Cart',
                confirmButtonColor: 'white',
                cancelButtonColor: 'white'
            }).then((result) => {
                if (!result.isConfirmed) {
                    // If user clicks "View Cart"
                    window.location.href = '/cart';
                }
            });
        } else {
            Swal.fire({
                title: 'Error!',
                text: data.message || 'Error adding to cart',
                icon: 'error',
                confirmButtonText: 'OK',
                confirmButtonColor: '#3085d6'
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'Failed to add product to cart',
            icon: 'error',
            confirmButtonText: 'OK',
            confirmButtonColor: '#3085d6'
        });
    });
}

function updateMainImage(src, variantIndex) {
    document.getElementById('mainImage').src = src;
    document.getElementById('zoomResult').style.backgroundImage = `url(${src})`;
    currentVariant = variantIndex;
}

function updateCartCount() {
    fetch('/cart/count')
    .then(response => response.json())
    .then(data => {
        document.getElementById('cart-count').innerText = data.count;
    });
}
</script>

<script src="/js/zoom.js"></script>

<%- include("../../views/partials/user/footer") %>
